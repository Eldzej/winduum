@layer utilities {
  :where(.ui-btn) {
    --color-current: var(--color-light);
    --ui-btn-width: auto;
    --ui-btn-height: 2.25rem;
    --ui-btn-py: 0.375rem;
    --ui-btn-px: 0.75rem;
    --ui-btn-border-radius: var(--rounded);
    --ui-btn-font-size: 0.875rem;
    --ui-btn-font-weight: var(--font-medium);
    --ui-btn-bg: rgb(var(--color-accent) / var(--ui-btn-bg-opacity));
    --ui-btn-bg-opacity: var(--tw-bg-opacity, 1);
    --ui-btn-color: rgb(var(--color-current) / var(--ui-btn-color-opacity));
    --ui-btn-color-opacity: var(--tw-text-opacity, 1);
    --ui-btn-hover-filter: invert(1);
    --ui-btn-hover-opacity: 0.2;
    --ui-btn-focus-opacity: 0.3;
    --ui-btn-disabled-opacity: 0.7;
    --ui-btn-outline-width: 2px;
    --ui-btn-outline-opacity: 0.5;
    --ui-btn-icon-font-size: 1.25rem;
    --ui-btn-gap: 0.375rem;
    --ui-btn-loading-width: 1rem;
    --ui-btn-loading-border-width: 2px;

    width: var(--ui-btn-width);
    height: var(--ui-btn-height);
    padding: var(--ui-btn-py) var(--ui-btn-px);
    border-radius: var(--ui-btn-border-radius);
    font-size: var(--ui-btn-font-size);
    font-weight: var(--ui-btn-font-weight);
    background-color: var(--ui-btn-bg);
    color: var(--ui-btn-color);
    user-select: none;
    overflow: hidden;
    display: inline-flex;
    align-items: center;
    text-align: center;
    justify-content: center;
    white-space: nowrap;
    flex-shrink: 0;
    cursor: pointer;
    position: relative;
    z-index: 0;
    transition: var(--transition-opacity), var(--transition-background), var(--transition-color);
    gap: var(--ui-btn-gap);

    & svg {
      width: 1em;
      height: 1em;
      font-size: var(--ui-btn-icon-font-size);
    }

    &::before {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      content: "";
      background-color: rgb(var(--color-current));
      filter: var(--ui-btn-hover-filter);
      z-index: -1;
      opacity: 0;
      transition: var(--transition-opacity);
    }

    &.-sm {
      --ui-btn-height: 2rem;
      --ui-btn-px: 1rem;
    }

    &.-lg {
      --ui-btn-height: 3rem;
      --ui-btn-px: 1.75rem;
    }

    &.-wide {
      padding-left: calc(var(--ui-btn-px) * 2);
      padding-right: calc(var(--ui-btn-px) * 2);
    }

    &:where(.-outline, .-muted, .-text) {
      --color-current: var(--color-accent);
      --ui-btn-hover-opacity: 0.1;
      --ui-btn-hover-filter: none;

      background-color: transparent;

      &::before {
        background-color: var(--ui-btn-bg);
      }
    }

    &.-outline {
      --ui-btn-focus-opacity: 0.15;

      outline: var(--ui-btn-outline-width) solid rgb(var(--color-accent) / var(--ui-btn-outline-opacity));
      outline-offset: calc(var(--ui-btn-outline-width) * -1);
    }

    &.-muted {
      --ui-btn-hover-opacity: 0.3;

      &::before {
        opacity: 0.1;
      }
    }

    &.-raised {
      --ui-btn-outline-opacity: 0.1;

      outline: var(--ui-btn-outline-width) solid rgb(var(--color-current) / var(--ui-btn-outline-opacity));
      outline-offset: calc(var(--ui-btn-outline-width) * -1);
    }

    &.-hover-full {
      --ui-btn-hover-opacity: 1;
    }

    &:where(.-square, .-circle) {
      --ui-btn-py: var(--ui-btn-py);
      --ui-btn-width: var(--ui-btn-height);
    }

    &.-circle {
      border-radius: var(--rounded-full);
    }

    &.-loading {
      pointer-events: none;
      color: transparent;

      & > * {
        opacity: 0;
      }

      &::after {
        z-index: 1;
        width: var(--ui-btn-loading-width);
        height: var(--ui-btn-loading-width);
        content: "";
        border: var(--ui-btn-loading-border-width) solid rgb(var(--color-current));
        border-right-color: transparent;
        border-radius: 50%;
        animation: spin 0.45s infinite linear;
        position: absolute;
        margin-left: calc(var(--ui-btn-loading-width) / 2 * -1);
        margin-top: calc(var(--ui-btn-loading-width) / 2 * -1);
        left: 50%;
        top: 50%;
      }
    }

    &:hover {
      @media (hover: hover) and (pointer: fine) {
        &.-hover-filled {
          --color-current: var(--color-light);
        }

        &::before {
          opacity: var(--ui-btn-hover-opacity);
        }
      }
    }

    &:is(:active, .-active) {
      &.-hover-filled {
        --color-current: var(--color-light);
      }

      &::before {
        opacity: var(--ui-btn-hover-opacity);
      }
    }

    &:focus-visible {
      z-index: 2;
      box-shadow:
        0 0 0 0 rgb(var(--color-current)),
        0 0 0 max(2px, var(--ui-btn-outline-width)) rgb(var(--color-accent) / var(--ui-btn-focus-opacity));
    }

    &:disabled {
      pointer-events: none;
      opacity: var(--ui-btn-disabled-opacity);
    }
  }

  :where(.ui-btn-group) {
    display: flex;

    & .ui-btn {
      &:not(:first-child) {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        margin-left: calc(var(--ui-btn-outline-width) * -1);
      }

      &:not(:last-child) {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }
}
